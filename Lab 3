/* mbed Microcontroller Library
 * Copyright (c) 2019 ARM Limited
 * SPDX-License-Identifier: Apache-2.0
 */

#include "mbed.h"
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"

// Blinking rate in milliseconds
#define BLINKING_RATE     500ms

AnalogIn ain(A0);
DigitalIn boton(BUTTON1);
I2C i2C(D14, D15);
Adafruit_SSD1306_I2c oled (i2C,D0);

static int16_t altura=0;
static float Vin = 0.0;
static int ent = 0;
static int dec = 0;
static int acum = 0;
static int i = 0, n = 0, VT=0;
static int punto1 = 0, punto2=0;
static int mediana=0, promedio=0;
int muestras[10];
int ultima_muestra;

Thread hilo_calculos;
Thread hilo_visualizacion;
Thread hilo_muestra;
void calculos (void);
void visualizacion(void);
void muestra(void);


int main()
{
    hilo_calculos.start(calculos);
    hilo_visualizacion.start(visualizacion);
    while (true) {
        ThisThread::sleep_for(BLINKING_RATE);
    }
}

void calculos (void)
{
    while (true) {

        Vin = ain*3.3;
        ent = int(Vin); // casting
        dec = int((Vin-ent)*10000);
        printf("El voltaje es: %1u.%04u v \n\r", ent, dec);

        if(boton==false){
            while(true){
                Vin = ain*3.3;
                ent = int(Vin);
                dec = int((Vin-ent)*10000);
                if(n<10){
                    muestras[n]=dec;
                    if(n==9) ultima_muestra=dec;
                    n++;
                    acum = dec+acum;
                    printf("Muestra %u es: %1u.%04u v \n\r",n,ent, dec);
                }

                if(n==10){
                    for (int r=0;r<10;r=r+1){
                        for (int m=0;m<9 ;m=m+1){
                            if (muestras[m]< muestras[m+1]){
                                VT = muestras[m];
                                muestras[m] = muestras[m+1];
                                muestras[m+1] = VT;
                            }
                        }   
                    }
                
                    punto1 = muestras[4];
                    punto2 = muestras[5];
                    mediana = (punto1+punto2)/2;
                    promedio = acum/10;
                    printf("La mediana es: %1u.%04u v \n\r", ent, mediana);
                    printf("El promedio es: %1u.%04u v \n\r", ent, promedio);
                    hilo_muestra.start(muestra);
                    n++;

                }
                ThisThread::sleep_for(500ms);
            }
        }
        ThisThread::sleep_for(500ms);
    }
}

void visualizacion (void){
        
        oled.begin();
        oled.display();
        oled.clearDisplay();
        ThisThread::sleep_for(1s);
        while (boton==true) {
            altura = (ent+1)*4;
            oled.begin();
            oled.fillCircle(64, 16, altura, 1);
            oled.display();
            if(altura==16) altura=0;
            ThisThread::sleep_for(1ms);
            oled.clearDisplay();
            ThisThread::sleep_for(1ms);
        }
}

void muestra (void){
    int w=0;
    oled.begin();
    oled.display();
    oled.clearDisplay();
    ThisThread::sleep_for(1ms);
    while (w<1) {
        oled.begin();
        oled.setTextSize(1);
        oled.printf("Mediana: %1u.%04u v \n\rPromedio: %1u.%04u v \n\rMuestra 10: %1u.%04u v",ent,mediana,ent,promedio,ent,ultima_muestra );
        oled.display();
        w++;
    }
}
